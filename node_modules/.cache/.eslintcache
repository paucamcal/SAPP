[{"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/index.js":"1","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/reportWebVitals.js":"2","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/App.js":"3","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/Geolocation.js":"4"},{"size":316,"mtime":1694212053181,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1693948117508,"results":"7","hashOfConfig":"6"},{"size":6052,"mtime":1694210190485,"results":"8","hashOfConfig":"6"},{"size":944,"mtime":1694211425768,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14ox8fs",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/index.js",[],[],"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/reportWebVitals.js",[],[],[],"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/App.js",["25","26","27","28","29"],[],"import React, { Component } from 'react';\nimport Geolocation from './Geolocation';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    organizations: [],\n    userLocation: null,\n  };\n\n  componentDidMount() {\n    const apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const { latitude, longitude } = position.coords;\n\n        const geoApiUrl = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`;\n\n        try {\n          const geoResponse = await fetch(geoApiUrl);\n          if (!geoResponse.ok) {\n            throw new Error('Failed to fetch geolocation data from the API');\n          }\n\n          const geoData = await geoResponse.json();\n\n          const zipCode = this.extractZipCode(geoData);\n\n          this.setState({\n            userLocation: { latitude, longitude },\n            userZipCode: zipCode,\n          });\n\n          const nearestOrg = await this.findNearestOrganization(zipCode);\n          console.log('Nearest Organization:', nearestOrg);\n        } catch (geoError) {\n          console.error('Error fetching geolocation data:', geoError);\n        }\n      });\n    } else {\n      // Geolocation is not available in this browser\n      // Handle accordingly, e.g., by showing a message to the user\n    }\n  }\n\n  extractZipCode = (geoData) => {\n    const addressComponents = geoData.results[0]?.address_components || [];\n\n    for (const component of addressComponents) {\n      const types = component.types || [];\n      if (types.includes('postal_code')) {\n        return component.short_name;\n      }\n    }\n\n    return null;\n  };\n\n  findNearestOrganization = async (userZipCode) => {\n    const apiUrl = `https://example.com/api/organizations?zipCode=${userZipCode}`;\n\n    try {\n      const response = await fetch(apiUrl);\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch data from the API');\n      }\n\n      const data = await response.json();\n\n      let nearestOrganization = null;\n      let nearestDistance = Infinity;\n\n      for (const org of data.organizations) {\n        const distance = this.calculateDistance(\n          this.state.userLocation.latitude,\n          this.state.userLocation.longitude,\n          org.latitude,\n          org.longitude\n        );\n\n        if (distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestOrganization = org;\n        }\n      }\n\n      return nearestOrganization;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const degToRad = (degrees) => (degrees * Math.PI) / 180;\n    const radius = 6371;\n\n    const lat1Rad = degToRad(lat1);\n    const lon1Rad = degToRad(lon1);\n    const lat2Rad = degToRad(lat2);\n    const lon2Rad = degToRad(lon2);\n\n    const dLat = lat2Rad - lat1Rad;\n    const dLon = lon2Rad - lon1Rad;\n\n    const a =\n      Math.sin(dLat / 2) ** 2 +\n      Math.cos(lat1Rad) * Math.cos(lat2Rad) * Math.sin(dLon / 2) ** 2;\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    const distance = radius * c;\n\n    return distance;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href=\"https://www.slogdesign.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"https://www.slogdesign.io/wp-content/uploads/2023/06/SLOGO2-1.png\" alt=\"SLOGO\" className=\"logo\" />\n        </a>\n\n        <section className=\"hero-section\">\n          <div className=\"card-grid\">\n            {/* LGBTQ+ Card */}\n            <a className=\"card card__lgbtq\" href=\"#\">\n              <div className=\"card__background\" style={{ backgroundImage: \"url('https://images.pexels.com/photos/3693901/pexels-photo-3693901.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2')\" }}></div>\n              <div className=\"card__content\">\n                <p className=\"card__category\">Category</p>\n                <h3 className=\"card__heading\">LGBTQ+ SUPPORT</h3>\n                <p className=\"card__photographer\">(cottonbro studio)</p>\n              </div>\n            </a>\n\n            {/* Domestic Violence Card */}\n            <a className=\"card card__domesticviolence\" href=\"#\">\n              <div className=\"card__background\" style={{ backgroundImage: \"url('https://images.pexels.com/photos/6757341/pexels-photo-6757341.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2')\" }}></div>\n              <div className=\"card__content\">\n                <p className=\"card__category\">Category</p>\n                <h3 className=\"card__heading\">DV ASSISTANCE</h3>\n                <p className=\"card__photographer\">(Mariana Montrazi)</p>\n              </div>\n            </a>\n\n            {/* Mental Health Card */}\n            <a className=\"card card__mentalhealth\" href=\"#\">\n              <div className=\"card__background\" style={{ backgroundImage: \"url('https://images.pexels.com/photos/7654802/pexels-photo-7654802.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2')\" }}></div>\n              <div className=\"card__content\">\n                <p className=\"card__category\">Category</p>\n                <h3 className=\"card__heading\">MENTAL HEALTH CRISIS</h3>\n                <p className=\"card__photographer\">(Elijah O'Donnell)</p>\n              </div>\n            </a>\n\n            {/* Elderly Services Card */}\n            <a className=\"card card__elderlyservices\" href=\"#\">\n              <div className=\"card__background\" style={{ backgroundImage: \"url('https://images.pexels.com/photos/2586537/pexels-photo-2586537.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2')\" }}></div>\n              <div className=\"card__content\">\n                <p className=\"card__category\">Category</p>\n                <h3 className=\"card__heading\">ELDERLY PROTECTION SERVICES</h3>\n                <p className=\"card__photographer\">(Vlad Che»õan)</p>\n              </div>\n            </a>\n            {/* Add more card elements if needed */}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/Geolocation.js",["30"],[],"import React, { Component } from 'react';\n\nclass Geolocation extends Component {\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(this.handleLocationSuccess, this.handleLocationError);\n    } else {\n      this.handleLocationError({ message: \"Geolocation is not available in this browser\" });\n    }\n  }\n\n  handleLocationSuccess = (position) => {\n    // Handle the user's location data here\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    // You can use latitude and longitude to perform actions based on geolocation.\n    console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);\n  };\n\n  handleLocationError = (error) => {\n    // Handle geolocation error\n    console.error(`Geolocation error: ${error.message}`);\n    // You can provide a user-friendly message or take other actions as needed.\n  };\n}\n\nexport default Geolocation;\n",{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":19},{"ruleId":"35","severity":1,"message":"36","line":128,"column":13,"nodeType":"37","endLine":128,"endColumn":54},{"ruleId":"35","severity":1,"message":"36","line":138,"column":13,"nodeType":"37","endLine":138,"endColumn":65},{"ruleId":"35","severity":1,"message":"36","line":148,"column":13,"nodeType":"37","endLine":148,"endColumn":61},{"ruleId":"35","severity":1,"message":"36","line":158,"column":13,"nodeType":"37","endLine":158,"endColumn":64},{"ruleId":"31","severity":1,"message":"38","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":13},"no-unused-vars","'Geolocation' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used."]