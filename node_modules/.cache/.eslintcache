[{"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/index.js":"1","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/reportWebVitals.js":"2","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/App.js":"3","/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/Geolocation.js":"4"},{"size":535,"mtime":1693948117506,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1693948117508,"results":"7","hashOfConfig":"6"},{"size":1500,"mtime":1694120810748,"results":"8","hashOfConfig":"6"},{"size":740,"mtime":1693963956703,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14ox8fs",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/index.js",[],[],"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/reportWebVitals.js",[],[],"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/App.js",[],[],"/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/src/Geolocation.js",["23","24"],[],"import React, { Component } from 'react';\n\nclass Geolocation extends Component {\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        // Handle the user's location data here\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n\n        // You can use latitude and longitude to perform actions based on geolocation.\n      });\n    } else {\n      // Geolocation is not available in this browser\n      // Handle accordingly, e.g., by showing a message to the user\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Component UI goes here */}\n      </div>\n    );\n  }\n}\n\nexport default Geolocation;\n",{"ruleId":"25","severity":1,"message":"26","line":8,"column":15,"nodeType":"27","messageId":"28","endLine":8,"endColumn":23},{"ruleId":"25","severity":1,"message":"29","line":9,"column":15,"nodeType":"27","messageId":"28","endLine":9,"endColumn":24},"no-unused-vars","'latitude' is assigned a value but never used.","Identifier","unusedVar","'longitude' is assigned a value but never used."]