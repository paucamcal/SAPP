{"ast":null,"code":"const npm = {\n  u: require('util'),\n  os: require('os'),\n  utils: require('../utils/static')\n};\nconst errorReasons = {\n  0: 'Page with index %d rejected.',\n  1: 'Source %s returned a rejection at index %d.',\n  2: 'Source %s threw an error at index %d.',\n  3: 'Destination %s returned a rejection at index %d.',\n  4: 'Destination %s threw an error at index %d.',\n  5: 'Source %s returned a non-array value at index %d.'\n};\n\n/**\r\n * @class errors.PageError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link page}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `PageError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {} error\r\n * The error that was thrown, or the rejection reason.\r\n *\r\n * @property {number} index\r\n * Index of the element in the sequence for which the error/rejection occurred.\r\n *\r\n * @property {number} duration\r\n * Duration (in milliseconds) of processing until the error/rejection occurred.\r\n *\r\n * @property {string} reason\r\n * Textual explanation of why the method failed.\r\n *\r\n * @property {} source\r\n * Resolved `data` parameter that was passed into the `source` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `source` function.\r\n *\r\n * @property {} dest\r\n * Resolved `data` parameter that was passed into the `dest` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `dest` function.\r\n *\r\n * @see\r\n * {@link page},\r\n * {@link batch}\r\n *\r\n */\nclass PageError extends Error {\n  constructor(e, code, cbName, duration) {\n    let message;\n    if (e.error instanceof Error) {\n      message = e.error.message;\n    } else {\n      message = e.error;\n      if (typeof message !== 'string') {\n        message = npm.u.inspect(message);\n      }\n    }\n    super(message);\n    this.name = this.constructor.name;\n    this.index = e.index;\n    this.duration = duration;\n    this.error = e.error;\n    if ('source' in e) {\n      this.source = e.source;\n    }\n    if ('dest' in e) {\n      this.dest = e.dest;\n    }\n    if (code) {\n      cbName = cbName ? '\\'' + cbName + '\\'' : '<anonymous>';\n      this.reason = npm.u.format(errorReasons[code], cbName, e.index);\n    } else {\n      this.reason = npm.u.format(errorReasons[code], e.index);\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n/**\r\n * @method errors.PageError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\nPageError.prototype.toString = function (level) {\n  level = level > 0 ? parseInt(level) : 0;\n  const gap0 = npm.utils.messageGap(level),\n    gap1 = npm.utils.messageGap(level + 1),\n    lines = ['PageError {', gap1 + 'message: ' + JSON.stringify(this.message), gap1 + 'reason: ' + this.reason, gap1 + 'index: ' + this.index, gap1 + 'duration: ' + this.duration];\n  lines.push(gap1 + 'error: ' + npm.utils.formatError(this.error, level + 1));\n  lines.push(gap0 + '}');\n  return lines.join(npm.os.EOL);\n};\nnpm.utils.addInspection(PageError, function () {\n  return this.toString();\n});\nmodule.exports = {\n  PageError\n};","map":{"version":3,"names":["npm","u","require","os","utils","errorReasons","PageError","Error","constructor","e","code","cbName","duration","message","error","inspect","name","index","source","dest","reason","format","captureStackTrace","prototype","toString","level","parseInt","gap0","messageGap","gap1","lines","JSON","stringify","push","formatError","join","EOL","addInspection","module","exports"],"sources":["/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/node_modules/spex/lib/errors/page.js"],"sourcesContent":["const npm = {\r\n    u: require('util'),\r\n    os: require('os'),\r\n    utils: require('../utils/static')\r\n};\r\n\r\nconst errorReasons = {\r\n    0: 'Page with index %d rejected.',\r\n    1: 'Source %s returned a rejection at index %d.',\r\n    2: 'Source %s threw an error at index %d.',\r\n    3: 'Destination %s returned a rejection at index %d.',\r\n    4: 'Destination %s threw an error at index %d.',\r\n    5: 'Source %s returned a non-array value at index %d.'\r\n};\r\n\r\n/**\r\n * @class errors.PageError\r\n * @augments external:Error\r\n * @description\r\n * This type represents all errors rejected by method {@link page}, except for {@link external:TypeError TypeError}\r\n * when the method receives invalid input parameters.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `PageError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {} error\r\n * The error that was thrown, or the rejection reason.\r\n *\r\n * @property {number} index\r\n * Index of the element in the sequence for which the error/rejection occurred.\r\n *\r\n * @property {number} duration\r\n * Duration (in milliseconds) of processing until the error/rejection occurred.\r\n *\r\n * @property {string} reason\r\n * Textual explanation of why the method failed.\r\n *\r\n * @property {} source\r\n * Resolved `data` parameter that was passed into the `source` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `source` function.\r\n *\r\n * @property {} dest\r\n * Resolved `data` parameter that was passed into the `dest` function.\r\n *\r\n * It is only set when the error/rejection occurred inside the `dest` function.\r\n *\r\n * @see\r\n * {@link page},\r\n * {@link batch}\r\n *\r\n */\r\nclass PageError extends Error {\r\n\r\n    constructor(e, code, cbName, duration) {\r\n\r\n        let message;\r\n        if (e.error instanceof Error) {\r\n            message = e.error.message;\r\n        } else {\r\n            message = e.error;\r\n            if (typeof message !== 'string') {\r\n                message = npm.u.inspect(message);\r\n            }\r\n        }\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n\r\n        this.index = e.index;\r\n        this.duration = duration;\r\n        this.error = e.error;\r\n\r\n        if ('source' in e) {\r\n            this.source = e.source;\r\n        }\r\n\r\n        if ('dest' in e) {\r\n            this.dest = e.dest;\r\n        }\r\n\r\n        if (code) {\r\n            cbName = cbName ? ('\\'' + cbName + '\\'') : '<anonymous>';\r\n            this.reason = npm.u.format(errorReasons[code], cbName, e.index);\r\n        } else {\r\n            this.reason = npm.u.format(errorReasons[code], e.index);\r\n        }\r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @method errors.PageError.toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nPageError.prototype.toString = function (level) {\r\n\r\n    level = level > 0 ? parseInt(level) : 0;\r\n\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'PageError {',\r\n            gap1 + 'message: ' + JSON.stringify(this.message),\r\n            gap1 + 'reason: ' + this.reason,\r\n            gap1 + 'index: ' + this.index,\r\n            gap1 + 'duration: ' + this.duration\r\n        ];\r\n\r\n    lines.push(gap1 + 'error: ' + npm.utils.formatError(this.error, level + 1));\r\n    lines.push(gap0 + '}');\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(PageError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {PageError};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}