{"ast":null,"code":"const util = require('util');\nclass ColorConsole {\n  static log() {\n    ColorConsole.writeNormal([...arguments], 39); // white\n  }\n\n  static info() {\n    ColorConsole.writeNormal([...arguments], 36); // cyan\n  }\n\n  static success() {\n    ColorConsole.writeNormal([...arguments], 32); // green\n  }\n\n  static warn() {\n    ColorConsole.writeNormal([...arguments], 33); // yellow\n  }\n\n  static error() {\n    ColorConsole.writeError([...arguments], 31); // red\n  }\n\n  static writeNormal(params, color) {\n    // istanbul ignore else\n    if (process.stdout.isTTY) {\n      console.log.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\n    } else {\n      console.log.apply(null, params); // eslint-disable-line no-console\n    }\n  }\n\n  static writeError(params, color) {\n    // istanbul ignore else\n    if (process.stderr.isTTY) {\n      console.error.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\n    } else {\n      console.error.apply(null, params); // eslint-disable-line no-console\n    }\n  }\n\n  static formatColor(args, color) {\n    return args.map(a => `\\x1b[${color}m${util.format(a)}\\x1b[0m`);\n  }\n}\nColorConsole.log.bright = function () {\n  ColorConsole.writeNormal([...arguments], 97); // light white\n};\n\nColorConsole.info.bright = function () {\n  ColorConsole.writeNormal([...arguments], 93); // light cyan\n};\n\nColorConsole.success.bright = function () {\n  ColorConsole.writeNormal([...arguments], 92); // light green\n};\n\nColorConsole.warn.bright = function () {\n  ColorConsole.writeNormal([...arguments], 93); // light yellow\n};\n\nColorConsole.error.bright = function () {\n  ColorConsole.writeError([...arguments], 91); // light red\n};\n\nmodule.exports = {\n  ColorConsole\n};","map":{"version":3,"names":["util","require","ColorConsole","log","writeNormal","arguments","info","success","warn","error","writeError","params","color","process","stdout","isTTY","console","apply","formatColor","stderr","args","map","a","format","bright","module","exports"],"sources":["/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/node_modules/pg-promise/lib/utils/color.js"],"sourcesContent":["const util = require('util');\r\n\r\nclass ColorConsole {\r\n\r\n    static log() {\r\n        ColorConsole.writeNormal([...arguments], 39); // white\r\n    }\r\n\r\n    static info() {\r\n        ColorConsole.writeNormal([...arguments], 36); // cyan\r\n    }\r\n\r\n    static success() {\r\n        ColorConsole.writeNormal([...arguments], 32); // green\r\n    }\r\n\r\n    static warn() {\r\n        ColorConsole.writeNormal([...arguments], 33); // yellow\r\n    }\r\n\r\n    static error() {\r\n        ColorConsole.writeError([...arguments], 31); // red\r\n    }\r\n\r\n    static writeNormal(params, color) {\r\n        // istanbul ignore else\r\n        if (process.stdout.isTTY) {\r\n            console.log.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\r\n        } else {\r\n            console.log.apply(null, params); // eslint-disable-line no-console\r\n        }\r\n    }\r\n\r\n    static writeError(params, color) {\r\n        // istanbul ignore else\r\n        if (process.stderr.isTTY) {\r\n            console.error.apply(null, ColorConsole.formatColor(params, color)); // eslint-disable-line no-console\r\n        } else {\r\n            console.error.apply(null, params); // eslint-disable-line no-console\r\n        }\r\n    }\r\n\r\n    static formatColor(args, color) {\r\n        return args.map(a => `\\x1b[${color}m${util.format(a)}\\x1b[0m`);\r\n    }\r\n}\r\n\r\nColorConsole.log.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 97); // light white\r\n};\r\n\r\nColorConsole.info.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 93); // light cyan\r\n};\r\n\r\nColorConsole.success.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 92); // light green\r\n};\r\n\r\nColorConsole.warn.bright = function () {\r\n    ColorConsole.writeNormal([...arguments], 93); // light yellow\r\n};\r\n\r\nColorConsole.error.bright = function () {\r\n    ColorConsole.writeError([...arguments], 91); // light red\r\n};\r\n\r\nmodule.exports = {ColorConsole};\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMC,YAAY,CAAC;EAEf,OAAOC,GAAGA,CAAA,EAAG;IACTD,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD;;EAEA,OAAOC,IAAIA,CAAA,EAAG;IACVJ,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD;;EAEA,OAAOE,OAAOA,CAAA,EAAG;IACbL,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD;;EAEA,OAAOG,IAAIA,CAAA,EAAG;IACVN,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD;;EAEA,OAAOI,KAAKA,CAAA,EAAG;IACXP,YAAY,CAACQ,UAAU,CAAC,CAAC,GAAGL,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACjD;;EAEA,OAAOD,WAAWA,CAACO,MAAM,EAAEC,KAAK,EAAE;IAC9B;IACA,IAAIC,OAAO,CAACC,MAAM,CAACC,KAAK,EAAE;MACtBC,OAAO,CAACb,GAAG,CAACc,KAAK,CAAC,IAAI,EAAEf,YAAY,CAACgB,WAAW,CAACP,MAAM,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,MAAM;MACHI,OAAO,CAACb,GAAG,CAACc,KAAK,CAAC,IAAI,EAAEN,MAAM,CAAC,CAAC,CAAC;IACrC;EACJ;;EAEA,OAAOD,UAAUA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC7B;IACA,IAAIC,OAAO,CAACM,MAAM,CAACJ,KAAK,EAAE;MACtBC,OAAO,CAACP,KAAK,CAACQ,KAAK,CAAC,IAAI,EAAEf,YAAY,CAACgB,WAAW,CAACP,MAAM,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,MAAM;MACHI,OAAO,CAACP,KAAK,CAACQ,KAAK,CAAC,IAAI,EAAEN,MAAM,CAAC,CAAC,CAAC;IACvC;EACJ;;EAEA,OAAOO,WAAWA,CAACE,IAAI,EAAER,KAAK,EAAE;IAC5B,OAAOQ,IAAI,CAACC,GAAG,CAACC,CAAC,IAAK,QAAOV,KAAM,IAAGZ,IAAI,CAACuB,MAAM,CAACD,CAAC,CAAE,SAAQ,CAAC;EAClE;AACJ;AAEApB,YAAY,CAACC,GAAG,CAACqB,MAAM,GAAG,YAAY;EAClCtB,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC;;AAEDH,YAAY,CAACI,IAAI,CAACkB,MAAM,GAAG,YAAY;EACnCtB,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC;;AAEDH,YAAY,CAACK,OAAO,CAACiB,MAAM,GAAG,YAAY;EACtCtB,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC;;AAEDH,YAAY,CAACM,IAAI,CAACgB,MAAM,GAAG,YAAY;EACnCtB,YAAY,CAACE,WAAW,CAAC,CAAC,GAAGC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC;;AAEDH,YAAY,CAACO,KAAK,CAACe,MAAM,GAAG,YAAY;EACpCtB,YAAY,CAACQ,UAAU,CAAC,CAAC,GAAGL,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACjD,CAAC;;AAEDoB,MAAM,CAACC,OAAO,GAAG;EAACxB;AAAY,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}