{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n\nconst npm = {\n  os: require('os'),\n  utils: require('../utils'),\n  minify: require('pg-minify')\n};\n\n/**\r\n * @class errors.QueryFileError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.QueryFileError QueryFileError} class, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors related to {@link QueryFile}.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `QueryFileError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {string} file\r\n * File path/name that was passed into the {@link QueryFile} constructor.\r\n *\r\n * @property {object} options\r\n * Set of options that was used by the {@link QueryFile} object.\r\n *\r\n * @property {SQLParsingError} error\r\n * Internal $[SQLParsingError] object.\r\n *\r\n * It is set only when the error was thrown by $[pg-minify] while parsing the SQL file.\r\n *\r\n * @see QueryFile\r\n *\r\n */\nclass QueryFileError extends Error {\n  constructor(error, qf) {\n    const isSqlError = error instanceof npm.minify.SQLParsingError;\n    const message = isSqlError ? 'Failed to parse the SQL.' : error.message;\n    super(message);\n    this.name = this.constructor.name;\n    if (isSqlError) {\n      this.error = error;\n    }\n    this.file = qf.file;\n    this.options = qf.options;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n/**\r\n * @method errors.QueryFileError#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\nQueryFileError.prototype.toString = function (level) {\n  level = level > 0 ? parseInt(level) : 0;\n  const gap0 = npm.utils.messageGap(level),\n    gap1 = npm.utils.messageGap(level + 1),\n    lines = ['QueryFileError {', gap1 + 'message: \"' + this.message + '\"', gap1 + 'options: ' + npm.utils.toJson(this.options), gap1 + 'file: \"' + this.file + '\"'];\n  if (this.error) {\n    lines.push(gap1 + 'error: ' + this.error.toString(level + 1));\n  }\n  lines.push(gap0 + '}');\n  return lines.join(npm.os.EOL);\n};\nnpm.utils.addInspection(QueryFileError, function () {\n  return this.toString();\n});\nmodule.exports = {\n  QueryFileError\n};","map":{"version":3,"names":["npm","os","require","utils","minify","QueryFileError","Error","constructor","error","qf","isSqlError","SQLParsingError","message","name","file","options","captureStackTrace","prototype","toString","level","parseInt","gap0","messageGap","gap1","lines","toJson","push","join","EOL","addInspection","module","exports"],"sources":["/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/node_modules/pg-promise/lib/errors/query-file-error.js"],"sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst npm = {\r\n    os: require('os'),\r\n    utils: require('../utils'),\r\n    minify: require('pg-minify')\r\n};\r\n\r\n/**\r\n * @class errors.QueryFileError\r\n * @augments external:Error\r\n * @description\r\n * {@link errors.QueryFileError QueryFileError} class, available from the {@link errors} namespace.\r\n *\r\n * This type represents all errors related to {@link QueryFile}.\r\n *\r\n * @property {string} name\r\n * Standard {@link external:Error Error} property - error type name = `QueryFileError`.\r\n *\r\n * @property {string} message\r\n * Standard {@link external:Error Error} property - the error message.\r\n *\r\n * @property {string} stack\r\n * Standard {@link external:Error Error} property - the stack trace.\r\n *\r\n * @property {string} file\r\n * File path/name that was passed into the {@link QueryFile} constructor.\r\n *\r\n * @property {object} options\r\n * Set of options that was used by the {@link QueryFile} object.\r\n *\r\n * @property {SQLParsingError} error\r\n * Internal $[SQLParsingError] object.\r\n *\r\n * It is set only when the error was thrown by $[pg-minify] while parsing the SQL file.\r\n *\r\n * @see QueryFile\r\n *\r\n */\r\nclass QueryFileError extends Error {\r\n    constructor(error, qf) {\r\n        const isSqlError = error instanceof npm.minify.SQLParsingError;\r\n        const message = isSqlError ? 'Failed to parse the SQL.' : error.message;\r\n        super(message);\r\n        this.name = this.constructor.name;\r\n        if (isSqlError) {\r\n            this.error = error;\r\n        }\r\n        this.file = qf.file;\r\n        this.options = qf.options;\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\n/**\r\n * @method errors.QueryFileError#toString\r\n * @description\r\n * Creates a well-formatted multi-line string that represents the error.\r\n *\r\n * It is called automatically when writing the object into the console.\r\n *\r\n * @param {number} [level=0]\r\n * Nested output level, to provide visual offset.\r\n *\r\n * @returns {string}\r\n */\r\nQueryFileError.prototype.toString = function (level) {\r\n    level = level > 0 ? parseInt(level) : 0;\r\n    const gap0 = npm.utils.messageGap(level),\r\n        gap1 = npm.utils.messageGap(level + 1),\r\n        lines = [\r\n            'QueryFileError {',\r\n            gap1 + 'message: \"' + this.message + '\"',\r\n            gap1 + 'options: ' + npm.utils.toJson(this.options),\r\n            gap1 + 'file: \"' + this.file + '\"'\r\n        ];\r\n    if (this.error) {\r\n        lines.push(gap1 + 'error: ' + this.error.toString(level + 1));\r\n    }\r\n    lines.push(gap0 + '}');\r\n    return lines.join(npm.os.EOL);\r\n};\r\n\r\nnpm.utils.addInspection(QueryFileError, function () {\r\n    return this.toString();\r\n});\r\n\r\nmodule.exports = {QueryFileError};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG;EACRC,EAAE,EAAEC,OAAO,CAAC,IAAI,CAAC;EACjBC,KAAK,EAAED,OAAO,CAAC,UAAU,CAAC;EAC1BE,MAAM,EAAEF,OAAO,CAAC,WAAW;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,cAAc,SAASC,KAAK,CAAC;EAC/BC,WAAWA,CAACC,KAAK,EAAEC,EAAE,EAAE;IACnB,MAAMC,UAAU,GAAGF,KAAK,YAAYR,GAAG,CAACI,MAAM,CAACO,eAAe;IAC9D,MAAMC,OAAO,GAAGF,UAAU,GAAG,0BAA0B,GAAGF,KAAK,CAACI,OAAO;IACvE,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,WAAW,CAACM,IAAI;IACjC,IAAIH,UAAU,EAAE;MACZ,IAAI,CAACF,KAAK,GAAGA,KAAK;IACtB;IACA,IAAI,CAACM,IAAI,GAAGL,EAAE,CAACK,IAAI;IACnB,IAAI,CAACC,OAAO,GAAGN,EAAE,CAACM,OAAO;IACzBT,KAAK,CAACU,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACT,WAAW,CAAC;EACnD;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,cAAc,CAACY,SAAS,CAACC,QAAQ,GAAG,UAAUC,KAAK,EAAE;EACjDA,KAAK,GAAGA,KAAK,GAAG,CAAC,GAAGC,QAAQ,CAACD,KAAK,CAAC,GAAG,CAAC;EACvC,MAAME,IAAI,GAAGrB,GAAG,CAACG,KAAK,CAACmB,UAAU,CAACH,KAAK,CAAC;IACpCI,IAAI,GAAGvB,GAAG,CAACG,KAAK,CAACmB,UAAU,CAACH,KAAK,GAAG,CAAC,CAAC;IACtCK,KAAK,GAAG,CACJ,kBAAkB,EAClBD,IAAI,GAAG,YAAY,GAAG,IAAI,CAACX,OAAO,GAAG,GAAG,EACxCW,IAAI,GAAG,WAAW,GAAGvB,GAAG,CAACG,KAAK,CAACsB,MAAM,CAAC,IAAI,CAACV,OAAO,CAAC,EACnDQ,IAAI,GAAG,SAAS,GAAG,IAAI,CAACT,IAAI,GAAG,GAAG,CACrC;EACL,IAAI,IAAI,CAACN,KAAK,EAAE;IACZgB,KAAK,CAACE,IAAI,CAACH,IAAI,GAAG,SAAS,GAAG,IAAI,CAACf,KAAK,CAACU,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC,CAAC;EACjE;EACAK,KAAK,CAACE,IAAI,CAACL,IAAI,GAAG,GAAG,CAAC;EACtB,OAAOG,KAAK,CAACG,IAAI,CAAC3B,GAAG,CAACC,EAAE,CAAC2B,GAAG,CAAC;AACjC,CAAC;AAED5B,GAAG,CAACG,KAAK,CAAC0B,aAAa,CAACxB,cAAc,EAAE,YAAY;EAChD,OAAO,IAAI,CAACa,QAAQ,CAAC,CAAC;AAC1B,CAAC,CAAC;AAEFY,MAAM,CAACC,OAAO,GAAG;EAAC1B;AAAc,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}