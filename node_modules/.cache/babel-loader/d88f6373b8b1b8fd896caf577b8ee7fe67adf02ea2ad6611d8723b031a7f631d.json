{"ast":null,"code":"const {\n  inspect\n} = require('util');\n\n/////////////////////////////////////////////////////////////\n// Returns {line, column} of an index within multi-line text.\nfunction getIndexPos(text, index) {\n  let lineIdx = 0,\n    colIdx = index,\n    pos = 0;\n  do {\n    pos = text.indexOf('\\n', pos);\n    if (pos === -1 || index < pos + 1) {\n      break;\n    }\n    lineIdx++;\n    pos++;\n    colIdx = index - pos;\n  } while (pos < index);\n  return {\n    line: lineIdx + 1,\n    column: colIdx + 1\n  };\n}\n\n///////////////////////////////////////////\n// Returns a space gap for console output.\nfunction messageGap(level) {\n  return ' '.repeat(level * 4);\n}\n\n////////////////////////////////////////////////////\n// Type inspection\nfunction addInspection(type, cb) {\n  type[inspect.custom] = cb;\n}\nmodule.exports = {\n  getIndexPos,\n  messageGap,\n  addInspection\n};","map":{"version":3,"names":["inspect","require","getIndexPos","text","index","lineIdx","colIdx","pos","indexOf","line","column","messageGap","level","repeat","addInspection","type","cb","custom","module","exports"],"sources":["/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/node_modules/pg-minify/lib/utils.js"],"sourcesContent":["const {inspect} = require('util');\r\n\r\n/////////////////////////////////////////////////////////////\r\n// Returns {line, column} of an index within multi-line text.\r\nfunction getIndexPos(text, index) {\r\n    let lineIdx = 0, colIdx = index, pos = 0;\r\n    do {\r\n        pos = text.indexOf('\\n', pos);\r\n        if (pos === -1 || index < pos + 1) {\r\n            break;\r\n        }\r\n        lineIdx++;\r\n        pos++;\r\n        colIdx = index - pos;\r\n    } while (pos < index);\r\n    return {\r\n        line: lineIdx + 1,\r\n        column: colIdx + 1\r\n    };\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output.\r\nfunction messageGap(level) {\r\n    return ' '.repeat(level * 4);\r\n}\r\n\r\n////////////////////////////////////////////////////\r\n// Type inspection\r\nfunction addInspection(type, cb) {\r\n    type[inspect.custom] = cb;\r\n}\r\n\r\nmodule.exports = {\r\n    getIndexPos,\r\n    messageGap,\r\n    addInspection\r\n};\r\n"],"mappings":"AAAA,MAAM;EAACA;AAAO,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAEjC;AACA;AACA,SAASC,WAAWA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC9B,IAAIC,OAAO,GAAG,CAAC;IAAEC,MAAM,GAAGF,KAAK;IAAEG,GAAG,GAAG,CAAC;EACxC,GAAG;IACCA,GAAG,GAAGJ,IAAI,CAACK,OAAO,CAAC,IAAI,EAAED,GAAG,CAAC;IAC7B,IAAIA,GAAG,KAAK,CAAC,CAAC,IAAIH,KAAK,GAAGG,GAAG,GAAG,CAAC,EAAE;MAC/B;IACJ;IACAF,OAAO,EAAE;IACTE,GAAG,EAAE;IACLD,MAAM,GAAGF,KAAK,GAAGG,GAAG;EACxB,CAAC,QAAQA,GAAG,GAAGH,KAAK;EACpB,OAAO;IACHK,IAAI,EAAEJ,OAAO,GAAG,CAAC;IACjBK,MAAM,EAAEJ,MAAM,GAAG;EACrB,CAAC;AACL;;AAEA;AACA;AACA,SAASK,UAAUA,CAACC,KAAK,EAAE;EACvB,OAAO,GAAG,CAACC,MAAM,CAACD,KAAK,GAAG,CAAC,CAAC;AAChC;;AAEA;AACA;AACA,SAASE,aAAaA,CAACC,IAAI,EAAEC,EAAE,EAAE;EAC7BD,IAAI,CAACf,OAAO,CAACiB,MAAM,CAAC,GAAGD,EAAE;AAC7B;AAEAE,MAAM,CAACC,OAAO,GAAG;EACbjB,WAAW;EACXS,UAAU;EACVG;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}