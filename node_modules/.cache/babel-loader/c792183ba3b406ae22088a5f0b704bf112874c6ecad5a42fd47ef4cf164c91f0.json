{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n\nconst {\n  PromiseAdapter\n} = require('./promise-adapter');\n\n//////////////////////////////////////////\n// Parses and validates a promise library;\nfunction parse(pl) {\n  let promise;\n  if (pl instanceof PromiseAdapter) {\n    promise = function (func) {\n      return pl.create(func);\n    };\n    promise.resolve = pl.resolve;\n    promise.reject = pl.reject;\n    promise.all = pl.all;\n    return promise;\n  }\n  const t = typeof pl;\n  if (t === 'function' || t === 'object') {\n    const Root = typeof pl.Promise === 'function' ? pl.Promise : pl;\n    promise = function (func) {\n      return new Root(func);\n    };\n    promise.resolve = Root.resolve;\n    promise.reject = Root.reject;\n    promise.all = Root.all;\n    if (typeof promise.resolve === 'function' && typeof promise.reject === 'function' && typeof promise.all === 'function') {\n      return promise;\n    }\n  }\n  throw new TypeError('Invalid promise library specified.');\n}\nfunction parsePromise(promiseLib) {\n  const result = {\n    promiseLib\n  };\n  if (promiseLib) {\n    result.promise = parse(promiseLib);\n  } else {\n    result.promise = parse(Promise);\n    result.promiseLib = Promise;\n  }\n  return result;\n}\nmodule.exports = {\n  parsePromise\n};","map":{"version":3,"names":["PromiseAdapter","require","parse","pl","promise","func","create","resolve","reject","all","t","Root","Promise","TypeError","parsePromise","promiseLib","result","module","exports"],"sources":["/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/node_modules/pg-promise/lib/promise-parser.js"],"sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {PromiseAdapter} = require('./promise-adapter');\r\n\r\n//////////////////////////////////////////\r\n// Parses and validates a promise library;\r\nfunction parse(pl) {\r\n\r\n    let promise;\r\n    if (pl instanceof PromiseAdapter) {\r\n        promise = function (func) {\r\n            return pl.create(func);\r\n        };\r\n        promise.resolve = pl.resolve;\r\n        promise.reject = pl.reject;\r\n        promise.all = pl.all;\r\n        return promise;\r\n    }\r\n    const t = typeof pl;\r\n    if (t === 'function' || t === 'object') {\r\n        const Root = typeof pl.Promise === 'function' ? pl.Promise : pl;\r\n        promise = function (func) {\r\n            return new Root(func);\r\n        };\r\n        promise.resolve = Root.resolve;\r\n        promise.reject = Root.reject;\r\n        promise.all = Root.all;\r\n        if (typeof promise.resolve === 'function' &&\r\n            typeof promise.reject === 'function' &&\r\n            typeof promise.all === 'function') {\r\n            return promise;\r\n        }\r\n    }\r\n\r\n    throw new TypeError('Invalid promise library specified.');\r\n}\r\n\r\nfunction parsePromise(promiseLib) {\r\n    const result = {promiseLib};\r\n    if (promiseLib) {\r\n        result.promise = parse(promiseLib);\r\n    } else {\r\n        result.promise = parse(Promise);\r\n        result.promiseLib = Promise;\r\n    }\r\n    return result;\r\n}\r\n\r\nmodule.exports = {parsePromise};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAACA;AAAc,CAAC,GAAGC,OAAO,CAAC,mBAAmB,CAAC;;AAErD;AACA;AACA,SAASC,KAAKA,CAACC,EAAE,EAAE;EAEf,IAAIC,OAAO;EACX,IAAID,EAAE,YAAYH,cAAc,EAAE;IAC9BI,OAAO,GAAG,SAAAA,CAAUC,IAAI,EAAE;MACtB,OAAOF,EAAE,CAACG,MAAM,CAACD,IAAI,CAAC;IAC1B,CAAC;IACDD,OAAO,CAACG,OAAO,GAAGJ,EAAE,CAACI,OAAO;IAC5BH,OAAO,CAACI,MAAM,GAAGL,EAAE,CAACK,MAAM;IAC1BJ,OAAO,CAACK,GAAG,GAAGN,EAAE,CAACM,GAAG;IACpB,OAAOL,OAAO;EAClB;EACA,MAAMM,CAAC,GAAG,OAAOP,EAAE;EACnB,IAAIO,CAAC,KAAK,UAAU,IAAIA,CAAC,KAAK,QAAQ,EAAE;IACpC,MAAMC,IAAI,GAAG,OAAOR,EAAE,CAACS,OAAO,KAAK,UAAU,GAAGT,EAAE,CAACS,OAAO,GAAGT,EAAE;IAC/DC,OAAO,GAAG,SAAAA,CAAUC,IAAI,EAAE;MACtB,OAAO,IAAIM,IAAI,CAACN,IAAI,CAAC;IACzB,CAAC;IACDD,OAAO,CAACG,OAAO,GAAGI,IAAI,CAACJ,OAAO;IAC9BH,OAAO,CAACI,MAAM,GAAGG,IAAI,CAACH,MAAM;IAC5BJ,OAAO,CAACK,GAAG,GAAGE,IAAI,CAACF,GAAG;IACtB,IAAI,OAAOL,OAAO,CAACG,OAAO,KAAK,UAAU,IACrC,OAAOH,OAAO,CAACI,MAAM,KAAK,UAAU,IACpC,OAAOJ,OAAO,CAACK,GAAG,KAAK,UAAU,EAAE;MACnC,OAAOL,OAAO;IAClB;EACJ;EAEA,MAAM,IAAIS,SAAS,CAAC,oCAAoC,CAAC;AAC7D;AAEA,SAASC,YAAYA,CAACC,UAAU,EAAE;EAC9B,MAAMC,MAAM,GAAG;IAACD;EAAU,CAAC;EAC3B,IAAIA,UAAU,EAAE;IACZC,MAAM,CAACZ,OAAO,GAAGF,KAAK,CAACa,UAAU,CAAC;EACtC,CAAC,MAAM;IACHC,MAAM,CAACZ,OAAO,GAAGF,KAAK,CAACU,OAAO,CAAC;IAC/BI,MAAM,CAACD,UAAU,GAAGH,OAAO;EAC/B;EACA,OAAOI,MAAM;AACjB;AAEAC,MAAM,CAACC,OAAO,GAAG;EAACJ;AAAY,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}