{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n\nconst specialQueryType = {\n  result: 0,\n  multiResult: 1,\n  stream: 2\n};\nclass SpecialQuery {\n  constructor(type) {\n    this.isResult = type === specialQueryType.result; // type used implicitly\n    this.isStream = type === specialQueryType.stream;\n    this.isMultiResult = type === specialQueryType.multiResult;\n  }\n}\nconst cache = {\n  resultQuery: new SpecialQuery(specialQueryType.result),\n  multiResultQuery: new SpecialQuery(specialQueryType.multiResult),\n  streamQuery: new SpecialQuery(specialQueryType.stream)\n};\nmodule.exports = Object.assign({\n  SpecialQuery\n}, cache);","map":{"version":3,"names":["specialQueryType","result","multiResult","stream","SpecialQuery","constructor","type","isResult","isStream","isMultiResult","cache","resultQuery","multiResultQuery","streamQuery","module","exports","Object","assign"],"sources":["/Users/luna/Library/Mobile Documents/com~apple~CloudDocs/GitHub/paucamcal.github.io/AESP/node_modules/pg-promise/lib/special-query.js"],"sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst specialQueryType = {\r\n    result: 0,\r\n    multiResult: 1,\r\n    stream: 2\r\n};\r\n\r\nclass SpecialQuery {\r\n    constructor(type) {\r\n        this.isResult = type === specialQueryType.result; // type used implicitly\r\n        this.isStream = type === specialQueryType.stream;\r\n        this.isMultiResult = type === specialQueryType.multiResult;\r\n    }\r\n}\r\n\r\nconst cache = {\r\n    resultQuery: new SpecialQuery(specialQueryType.result),\r\n    multiResultQuery: new SpecialQuery(specialQueryType.multiResult),\r\n    streamQuery: new SpecialQuery(specialQueryType.stream)\r\n};\r\n\r\nmodule.exports = Object.assign({SpecialQuery}, cache);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,gBAAgB,GAAG;EACrBC,MAAM,EAAE,CAAC;EACTC,WAAW,EAAE,CAAC;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACC,QAAQ,GAAGD,IAAI,KAAKN,gBAAgB,CAACC,MAAM,CAAC,CAAC;IAClD,IAAI,CAACO,QAAQ,GAAGF,IAAI,KAAKN,gBAAgB,CAACG,MAAM;IAChD,IAAI,CAACM,aAAa,GAAGH,IAAI,KAAKN,gBAAgB,CAACE,WAAW;EAC9D;AACJ;AAEA,MAAMQ,KAAK,GAAG;EACVC,WAAW,EAAE,IAAIP,YAAY,CAACJ,gBAAgB,CAACC,MAAM,CAAC;EACtDW,gBAAgB,EAAE,IAAIR,YAAY,CAACJ,gBAAgB,CAACE,WAAW,CAAC;EAChEW,WAAW,EAAE,IAAIT,YAAY,CAACJ,gBAAgB,CAACG,MAAM;AACzD,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC;EAACb;AAAY,CAAC,EAAEM,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}